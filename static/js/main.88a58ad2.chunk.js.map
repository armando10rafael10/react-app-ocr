{"version":3,"sources":["Components/secundary/CircularProgressWithLabel.js","Components/ImgOcr.js","Components/MRutes.js","index.js"],"names":["CircularProgressWithLabel","props","Box","sx","position","display","CircularProgress","variant","top","left","bottom","right","alignItems","justifyContent","Typography","style","component","color","Math","round","value","ImgOcr","useState","textImageOrc","setTextImageOrc","imagePath","setImagePath","fileActive","setFileActive","progress","setProgress","progressActive","setProgressActive","languageSwitch","setLanguageSwitch","checkedSwitchLanguage","setCheckedSwitchLanguage","textFormatSwitch","setTextFormatSwitch","checkedSwitchTextFormat","setCheckedSwitchTextFormat","backgroundColor","fontStyle","fontSize","fontFamily","fontWeight","textDecoration","textAlign","textTransform","wordSpacing","stylesDefined","setStylesDefined","setAlerta","valor","type","toast","success","POSITION","TOP_LEFT","theme","hideProgressBar","closeOnClick","warn","info","error","showTextImage","id","map","line","i","text","toString","className","min","max","step","defaultValue","onChange","e","target","src","alt","event","document","getElementById","textContent","selectedFile","files","URL","createObjectURL","Switch","checked","htmlFor","Button","onClick","Tesseract","recognize","logger","m","catch","err","console","then","result","data","paragraphs","lines","size","textValue","seleccion","createRange","selectNodeContents","window","getSelection","removeAllRanges","addRange","execCommand","ex","removeRange","rutes","exact","path","configure","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.88a58ad2.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\n//circular\r\nexport default function CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ position: 'relative', display: 'inline-flex' }}>\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box sx={{\r\n            top: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n            right: 0,\r\n            position: 'absolute',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}>\r\n        <Typography style={{\"fontSize\":\"10px\"}} variant=\"caption\" component=\"div\" color=\"white\">\r\n          {`${Math.round(props.value)}%`}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}","import { useState } from 'react';\nimport * as React from 'react';\nimport Tesseract from 'tesseract.js';\nimport { Button } from '@mui/material';\nimport Switch from '@mui/material/Switch';\nimport CircularProgressWithLabel from './secundary/CircularProgressWithLabel';\nimport {toast} from 'react-toastify'; \nimport 'react-toastify/dist/ReactToastify.css'; \nimport './ImgOcr.css'; \nimport './imgOcrResponsive.css';\n\n//configure\ntoast.configure(); \nexport default function ImgOcr() { \n  const [textImageOrc, setTextImageOrc] = useState([]);\n  const [imagePath, setImagePath] = useState(\"https://i.ibb.co/4Rxyrc6/default.png\");\n  const [fileActive, setFileActive] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [progressActive, setProgressActive] = useState(false);\n  const [languageSwitch, setLanguageSwitch] = useState(\"spa\");\n  const [checkedSwitchLanguage, setCheckedSwitchLanguage] = useState(false);\n  const [textFormatSwitch, setTextFormatSwitch] = useState(\"paragraphs\");\n  const [checkedSwitchTextFormat, setCheckedSwitchTextFormat] = useState(false);\n  const [stylesDefined, setStylesDefined] = useState({\n    backgroundColor: '#FFFFFF',\n    color: '#000000',\n    fontStyle: 'Normal',\n    fontSize: 12,\n    fontFamily: 'Arial',\n    fontWeight: 'Normal',\n    textDecoration: 'None',\n    textAlign: 'Center',\n    textTransform: 'None',\n    wordSpacing: 0,\n  });\n\n  const setAlerta = (valor, type) =>{ \n    if(type === \"success\"){\n      toast.success(valor, {\n        position: toast.POSITION.TOP_LEFT,\n        theme: \"light\",\n        hideProgressBar: true,\n        closeOnClick: true,\n      });\n    }else if(type === \"warn\"){\n      toast.warn(valor, {\n        position: toast.POSITION.TOP_LEFT,\n        theme: \"light\",\n        hideProgressBar: true,\n        closeOnClick: true,\n      });\n    }else if(type === \"info\"){\n      toast.info(valor, {\n        position: toast.POSITION.TOP_LEFT,\n        theme: \"light\",\n        hideProgressBar: true,\n        closeOnClick: true,\n      });\n    }else if(type === \"error\"){\n      toast.error(valor, {\n        position: toast.POSITION.TOP_LEFT,\n        theme: \"light\",\n        hideProgressBar: true,\n        closeOnClick: true,\n      });\n    }else{\n      toast(valor);\n    }\n  }\n\n  const handleChangeFile = (event) => {\n    if (document.getElementById('textBox_message').textContent) {//hay contenido texto\n      document.getElementById('textBox_message').textContent = \"\";//delete text\n    }\n    try {\n      var selectedFile = event.target.files[0];\n      setImagePath(URL.createObjectURL(selectedFile));\n      setAlerta(\"Imagen seleccionada\", 'info');\n      setFileActive(true);\n    } catch (e) {\n      document.getElementById('textBox_message').textContent = \"\";//delete text\n      setAlerta(\"No selecciono ninguna imagen\", 'warn');\n      setImagePath(\"https://i.ibb.co/4Rxyrc6/default.png\");\n      setFileActive(false);\n    }\n  }\n\n  const handleConvertClick = () => {\n    if (fileActive === true) {\n      setProgressActive(true);\n      setAlerta(\"Procesando imagen.....!!\", 'info');\n      Tesseract.recognize(\n        imagePath, languageSwitch, {\n        logger: m => {\n          setProgress(m.progress * 100);\n        }\n      }).catch(err => {\n        console.error(err);\n      }).then(result => {\n        if(textFormatSwitch === \"paragraphs\"){\n          setTextImageOrc(result.data.paragraphs);\n        }else{\n          setTextImageOrc(result.data.lines);\n        }\n        setAlerta(\"finalizo el procesamiento de la imagen\", 'success');\n      });\n    } else {\n      setProgressActive(false);\n      setAlerta(\"No hay una imagen para procesar..!!\", 'warn');\n    }\n  }\n\n  const handleChangeSwitchLanguage = (event) => {\n    setCheckedSwitchLanguage(event.target.checked);\n    if (event.target.checked) {\n      setLanguageSwitch(\"eng\");\n    } else {\n      setLanguageSwitch(\"spa\");\n    }\n  };\n\n  const handleChangeSwitchTextFormat = (event) => {\n    setCheckedSwitchTextFormat(event.target.checked);\n    if (event.target.checked) {\n      setTextFormatSwitch(\"lines\");\n    } else {\n      setTextFormatSwitch(\"paragraphs\");\n    }\n  };\n\n  const handleCopyClick = () => {\n    var textValue = document.getElementById(\"textBox_message\");\n    var seleccion = document.createRange();\n    seleccion.selectNodeContents(textValue);\n    window.getSelection().removeAllRanges();\n    window.getSelection().addRange(seleccion);\n    try {\n      var res = document.execCommand('copy');\n      if (res)\n        setAlerta('¡¡Código copiado al portapapeles!!','success');\n      else\n        setAlerta('¡¡Ha fallado el copiado al portapapeles!!', 'warn');\n    } catch (ex) {\n      setAlerta(\"Se ha producido un error al copiar al portapaples..\", 'error');\n    }\n    window.getSelection().removeRange(seleccion);\n  }\n\n  const showTextImage = ( <div style={stylesDefined} id=\"textBox_message\">\n    {textImageOrc.map((line, i) =>\n      <p key={i.toString()}> {line.text} </p>\n    )}\n  </div>\n  );\n\n  return (\n      <div className=\"Main\">\n          <div className=\"Main-lateral\">\n              <div className=\"Main-element\">\n                <h1>font size :</h1>\n                <input type=\"number\" min=\"12\" max=\"40\" step=\"2\" defaultValue={stylesDefined.fontSize}\n                  onChange={(e) => setStylesDefined({ ...stylesDefined, fontSize: `${e.target.value}px` })} />\n              </div>\n              <div className=\"Main-element\">\n                <h1>spacing :</h1>\n                <input type=\"number\" min=\"0\" max=\"10\" defaultValue={stylesDefined.wordSpacing}\n                  onChange={(e) => setStylesDefined({ ...stylesDefined, wordSpacing: `${e.target.value}px` })} />\n              </div>\n              <div className=\"Main-element\">\n                <h1>color :</h1>\n                <input type=\"color\" value={stylesDefined.color} onChange={\n                  (e) => setStylesDefined({ ...stylesDefined, color: `${e.target.value}` })\n                } />\n              </div>\n              <div className=\"Main-element\">\n                <h1>background :</h1>\n                <input type=\"color\" value={stylesDefined.backgroundColor} onChange={\n                  (e) => setStylesDefined({ ...stylesDefined, backgroundColor: `${e.target.value}` })\n                } />\n              </div>\n              <div className=\"Main-element\">\n                <h1>font transform :</h1>\n                <select id=\"font_style\" defaultValue={stylesDefined.textTransform} onChange={\n                  (e) => {\n                    if (e.target.value === 'Underline') {\n                      setStylesDefined({ ...stylesDefined, textDecoration: `${e.target.value}` });\n                    } else if (e.target.value === 'Line-through') {\n                      setStylesDefined({ ...stylesDefined, textDecoration: `${e.target.value}` });\n                    } else if (e.target.value === 'None') {\n                      setStylesDefined({ ...stylesDefined, textDecoration: `${e.target.value}`, textTransform: `${e.target.value}` });\n                    } else {\n                      setStylesDefined({ ...stylesDefined, textTransform: `${e.target.value}` });\n                    }\n                  }\n                }>\n                  <option>Lowercase</option>\n                  <option>Capitalize</option>\n                  <option>None</option>\n                  <option>Underline</option>\n                  <option>Line-through</option>\n                </select>\n              </div>\n              <div className=\"Main-element\">\n                <h1>font style :</h1>\n                <select id=\"font_style\" defaultValue={stylesDefined.fontStyle} onChange={\n                  (e) => {\n                    if (e.target.value === 'Bold') {\n                      setStylesDefined({ ...stylesDefined, fontWeight: `${e.target.value}` });\n                    } else if (e.target.value === 'Bolder') {\n                      setStylesDefined({ ...stylesDefined, fontWeight: `${e.target.value}` });\n                    } else if (e.target.value === 'Lighter') {\n                      setStylesDefined({ ...stylesDefined, fontWeight: `${e.target.value}` });\n                    } else if (e.target.value === 'Normal') {\n                      setStylesDefined({ ...stylesDefined, fontWeight: 'Normal', fontStyle: 'Normal' });\n                    } else {\n                      setStylesDefined({ ...stylesDefined, fontStyle: `${e.target.value}` });\n                    }\n                  }\n                }>\n                  <option>Italic</option>\n                  <option>Oblique</option>\n                  <option>Normal</option>\n                  <option>Bold</option>\n                  <option>Bolder</option>\n                  <option>Lighter</option>\n                </select>\n              </div>\n              <div className=\"Main-element\">\n                <h1>Text Align :</h1>\n                <select id=\"text_align\" defaultValue={stylesDefined.textAlign} onChange={\n                  (e) => {\n                      setStylesDefined({ ...stylesDefined, textAlign: `${e.target.value}` });\n                  }\n                }>\n                  <option>Left</option>\n                  <option>Center</option>\n                  <option>Right</option>\n                  <option>Justify</option>\n                </select>\n              </div>\n              <div className=\"Main-element\">\n                <h1>font type:</h1>\n                <select id=\"font_family\" defaultValue={stylesDefined.fontFamily} onChange={\n                  (e) => setStylesDefined({ ...stylesDefined, fontFamily: `${e.target.value}` })\n                }>\n                  <option>Arial</option>\n                  <option>Bodoni</option>\n                  <option>Courier</option>\n                  <option>Cursive</option>\n                  <option>Fantasy</option>\n                  <option>Garamond</option>\n                  <option>Georgia</option>\n                  <option>Helvetica</option>\n                  <option>Lucida Sans</option>\n                  <option>Monospace</option>\n                  <option>Sans-serif</option>\n                  <option>Segoe UI</option>\n                  <option>Serif</option>\n                  <option>Tahoma</option>\n                  <option>Trajan</option>\n                  <option>Verdana</option>\n                </select>\n              </div>\n          </div>\n          <div className=\"Main-Contain\">\n            <div className=\"view-uploaded\">\n              <h1>Actual imagePath uploaded</h1>\n              <img src={imagePath} className=\"App-image\" alt=\"logo\" />\n              <br />\n              <div className=\"selectionFile\">\n                <input type=\"file\" onChange={handleChangeFile} />\n              </div>\n              <div className=\"switch\">\n                  <Switch checked={checkedSwitchLanguage} onChange={handleChangeSwitchLanguage} color=\"primary\" />\n                  <label htmlFor=\"language-Switch\">{languageSwitch}</label>\n\n                  <Switch checked={checkedSwitchTextFormat} onChange={handleChangeSwitchTextFormat} color=\"primary\" />\n                  <label>{textFormatSwitch}</label>\n              </div>\n              <br />\n              <Button onClick={handleConvertClick} variant=\"contained\" size='medium'\n                color=\"primary\">convert to text</Button><br />\n              {progressActive ? <CircularProgressWithLabel className=\"Cprogress\"\n                value={progress} color={\"primary\"} /> : null}\n            </div>\n            <div className=\"view-downloaded\">\n              <h1>Extracted text</h1>\n              {showTextImage}<br />\n              <Button variant=\"contained\" size='medium' \n                      color=\"primary\" onClick={handleCopyClick}>copy</Button>\n            </div>\n          </div>\n      </div>\n  );\n}","import { BrowserRouter,Route,Switch } from 'react-router-dom';\r\nimport ImgOcr from './ImgOcr';\r\n\r\nexport default function rutes() {\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/' component={ImgOcr}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MRutes from './Components/MRutes';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MRutes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}